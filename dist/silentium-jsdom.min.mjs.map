{"version":3,"file":"silentium-jsdom.min.mjs","sources":["../src/JSDomDocument.ts","../src/JSDomElement.ts"],"sourcesContent":["import { JSDOM } from \"jsdom\";\nimport { give, guestCast, GuestType, SourceType, value } from \"silentium\";\n\n/**\n * Helps to get Document from html string\n */\nexport const jsdomDocument = (\n  body: SourceType<string> = \"\",\n): SourceType<Document> => {\n  return (g: GuestType<Document>) => {\n    value(\n      body,\n      guestCast(g, (body) => {\n        give(\n          new JSDOM(`<!DOCTYPE html><body>${body}</body></html>`).window\n            .document,\n          g,\n        );\n      }),\n    );\n  };\n};\n","import {\n  patron,\n  sourceAll,\n  sourceChangeable,\n  SourceType,\n  value,\n} from \"silentium\";\n\n/**\n * Helps to get HTMLElement from html string\n */\nexport const jsDomElement = (\n  documentSrc: SourceType<Document>,\n  htmlSrc: SourceType<string>,\n) => {\n  const result = sourceChangeable<HTMLElement>();\n  const all = sourceAll<[Document, string]>([documentSrc, htmlSrc]);\n\n  value(\n    all,\n    patron(([document, html]) => {\n      const div = document.createElement(\"div\");\n      div.innerHTML = html;\n      result.give(div.children[0] as HTMLElement);\n    }),\n  );\n\n  return result;\n};\n"],"names":["jsdomDocument","body","g","value","guestCast","give","JSDOM","window","document","jsDomElement","documentSrc","htmlSrc","result","sourceChangeable","all","sourceAll","patron","html","div","createElement","innerHTML","children"],"mappings":"0IAMa,MAAAA,EAAgB,CAC3BC,EAA2B,KAEnBC,IACNC,EACEF,EACAG,EAAUF,GAAID,IACZI,EACE,IAAIC,EAAM,wBAAwBL,mBAAsBM,OACrDC,SACHN,EACF,IAEJ,ECRSO,EAAe,CAC1BC,EACAC,KAEA,MAAMC,EAASC,IACTC,EAAMC,EAA8B,CAACL,EAAaC,IAWjD,OATPR,EACEW,EACAE,GAAO,EAAER,EAAUS,MACX,MAAAC,EAAMV,EAASW,cAAc,OACnCD,EAAIE,UAAYH,EAChBL,EAAOP,KAAKa,EAAIG,SAAS,GAAiB,KAIvCT,CAAA"}